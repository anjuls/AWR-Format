var enqueueDefs = new Array();
enqueueDefs["enq: AB - ABMR process initialized"]="Group: &quot;Auto BMR&quot; Lock held to ensure that ABMR process is initialized";
enqueueDefs["enq: AB - ABMR process start/stop"]="Group: &quot;Auto BMR&quot; Lock held to ensure that only one ABMR is started in the cluster";
enqueueDefs["enq: AD - allocate AU"]="Group: &quot;ASM Disk AU Lock&quot; Synchronizes accesses to a specific ASM disk AU";
enqueueDefs["enq: AD - deallocate AU"]="Group: &quot;ASM Disk AU Lock&quot; Synchronizes accesses to a specific ASM disk AU";
enqueueDefs["enq: AD - relocate AU"]="Group: &quot;ASM Disk AU Lock&quot; Synchronizes accesses to a specific ASM disk AU";
enqueueDefs["enq: AE - lock"]="Group: &quot;Edition Lock&quot; Prevent Dropping an edition in use";
enqueueDefs["enq: AF - task serialization"]="Group: &quot;Advisor Framework&quot; This enqueue is used to serialize access to an advisor task";
enqueueDefs["enq: AG - contention"]="Group: &quot;Analytic Workspace Generation&quot; Synchronizes generation use of a particular workspace";
enqueueDefs["enq: AM - ASM ACD Relocation"]="Group: &quot;ASM Enqueue&quot; Block ASM cache freeze";
enqueueDefs["enq: AM - ASM Amdu Dump"]="Group: &quot;ASM Enqueue&quot; Allow only one AMDU dump when block read failure";
enqueueDefs["enq: AM - ASM File Destroy"]="Group: &quot;ASM Enqueue&quot; Prevent same file deletion race";
enqueueDefs["enq: AM - ASM Password File Update"]="Group: &quot;ASM Enqueue&quot; Allow one ASM password file update per cluster at a time";
enqueueDefs["enq: AM - ASM User"]="Group: &quot;ASM Enqueue&quot; Prevents a user from being dropped if it owns any open files";
enqueueDefs["enq: AM - ASM cache freeze"]="Group: &quot;ASM Enqueue&quot; Start ASM cache freeze";
enqueueDefs["enq: AM - PST split check"]="Group: &quot;ASM Enqueue&quot; Synchronizes check for Storage (PST) split in disk groups";
enqueueDefs["enq: AM - background COD reservation"]="Group: &quot;ASM Enqueue&quot; Reserve a background COD entry";
enqueueDefs["enq: AM - client registration"]="Group: &quot;ASM Enqueue&quot; Registers DB instance to ASM client state object hash";
enqueueDefs["enq: AM - disk offline"]="Group: &quot;ASM Enqueue&quot; Synchronizes disk offlines";
enqueueDefs["enq: AM - group block"]="Group: &quot;ASM Enqueue&quot; ASM group block";
enqueueDefs["enq: AM - group use"]="Group: &quot;ASM Enqueue&quot; Client group use";
enqueueDefs["enq: AM - rollback COD reservation"]="Group: &quot;ASM Enqueue&quot; Reserve a rollback COD entry";
enqueueDefs["enq: AM - shutdown"]="Group: &quot;ASM Enqueue&quot; Prevent DB instance registration during ASM instance shutdown";
enqueueDefs["enq: AO - contention"]="Group: &quot;MultiWriter Object Access&quot; Synchornizes access to objects and scalar variables";
enqueueDefs["enq: AS - service activation"]="Group: &quot;Service Operations&quot; Synchronizes new service activation";
enqueueDefs["enq: AT - contention"]="Group: &quot;Alter Tablespace&quot; Serializes 'alter tablespace' operations";
enqueueDefs["enq: AU - audit index file"]="Group: &quot;Audit index file&quot; lock held to operate on the audit index file";
enqueueDefs["enq: AV - AVD client registration"]="Group: &quot;ASM volume locks&quot; Serialize inst reg and first DG use";
enqueueDefs["enq: AV - add/enable first volume in DG"]="Group: &quot;ASM volume locks&quot; Serialize taking the AVD DG enqueue";
enqueueDefs["enq: AV - persistent DG number"]="Group: &quot;ASM volume locks&quot; prevent DG number collisions";
enqueueDefs["enq: AV - volume relocate"]="Group: &quot;ASM volume locks&quot; Serialize relocating volume extents";
enqueueDefs["enq: AW - AW generation lock"]="Group: &quot;Analytic Workspace&quot; In-use generation state for a particular workspace";
enqueueDefs["enq: AW - AW state lock"]="Group: &quot;Analytic Workspace&quot; Row lock synchronization for the AW$ table";
enqueueDefs["enq: AW - AW$ table lock"]="Group: &quot;Analytic Workspace&quot; Global access synchronization to the AW$ table";
enqueueDefs["enq: AW - user access for AW"]="Group: &quot;Analytic Workspace&quot; Synchronizes user accesses to a particular workspace";
enqueueDefs["enq: AY - contention"]="Group: &quot;KSXA Test Affinity Dictionary&quot; Affinity Dictionary test affinity synchronization";
enqueueDefs["enq: BB - 2PC across RAC instances"]="Group: &quot;Global Transaction Branch&quot; 2PC distributed transaction branch across RAC instances";
enqueueDefs["enq: BF - PMON Join Filter cleanup"]="Group: &quot;BLOOM FILTER&quot; PMON bloom filter recovery";
enqueueDefs["enq: BF - allocation contention"]="Group: &quot;BLOOM FILTER&quot; Allocate a bloom filter in a parallel statement";
enqueueDefs["enq: BR - file shrink"]="Group: &quot;Backup/Restore&quot; Lock held to prevent file from decreasing in physical size during RMAN backup";
enqueueDefs["enq: BR - multi-section restore header"]="Group: &quot;Backup/Restore&quot; Lock held to serialize file header access during multi-section restore";
enqueueDefs["enq: BR - multi-section restore section"]="Group: &quot;Backup/Restore&quot; Lock held to serialize section access during multi-section restore";
enqueueDefs["enq: BR - perform autobackup"]="Group: &quot;Backup/Restore&quot; Lock held to perform a new controlfile autobackup ";
enqueueDefs["enq: BR - proxy-copy"]="Group: &quot;Backup/Restore&quot; Lock held to allow cleanup from backup mode during an RMAN proxy-copy backup";
enqueueDefs["enq: BR - request autobackup"]="Group: &quot;Backup/Restore&quot; Lock held to request controlfile autobackups ";
enqueueDefs["enq: BR - space info datafile hdr update"]="Group: &quot;Backup/Restore&quot; Lock held to prevent multiple process to update the headers at the same time";
enqueueDefs["enq: CA - contention"]="Group: &quot;Calibration&quot; Synchronizes various IO calibration runs";
enqueueDefs["enq: CF - contention"]="Group: &quot;Controlfile Transaction&quot; Synchronizes accesses to the controlfile";
enqueueDefs["enq: CI - contention"]="Group: &quot;Cross-Instance Call Invocation&quot; Coordinates cross-instance function invocations";
enqueueDefs["enq: CL - compare labels"]="Group: &quot;Label Security cache&quot; Synchronizes accesses to label cache for label comparison";
enqueueDefs["enq: CL - drop label"]="Group: &quot;Label Security cache&quot; Synchronizes accesses to label cache when dropping a label";
enqueueDefs["enq: CM - gate"]="Group: &quot;ASM Instance Enqueue&quot; serialize access to instance enqueue";
enqueueDefs["enq: CM - instance"]="Group: &quot;ASM Instance Enqueue&quot; indicate ASM diskgroup is mounted";
enqueueDefs["enq: CN - race with init"]="Group: &quot;KTCN REG enq&quot; during descriptor initialization";
enqueueDefs["enq: CN - race with reg"]="Group: &quot;KTCN REG enq&quot; during transaction commit to see concurrent registrations";
enqueueDefs["enq: CN - race with txn"]="Group: &quot;KTCN REG enq&quot; during registration";
enqueueDefs["enq: CO - master slave det"]="Group: &quot;KTUCLO Master Slave enq&quot; enqueue held be Master in Cleanout Optim";
enqueueDefs["enq: CQ - contention"]="Group: &quot;Cleanup querycache registrations&quot; Serializes access to cleanup client query cache registrations";
enqueueDefs["enq: CR - block range reuse ckpt"]="Group: &quot;Reuse Block Range&quot; Coordinates fast block range reuse ckpt";
enqueueDefs["enq: CT - CTWR process start/stop"]="Group: &quot;Block Change Tracking&quot; Lock held to ensure that only one CTWR process is started in a single instance";
enqueueDefs["enq: CT - change stream ownership"]="Group: &quot;Block Change Tracking&quot; Lock held by one instance while change tracking is enabled, to guarantee access to thread-specific resources";
enqueueDefs["enq: CT - global space management"]="Group: &quot;Block Change Tracking&quot; Lock held during change tracking space management operations that affect the entire change tracking file";
enqueueDefs["enq: CT - local space management"]="Group: &quot;Block Change Tracking&quot; Lock held during change tracking space management operations that affect just the data for one thread";
enqueueDefs["enq: CT - reading"]="Group: &quot;Block Change Tracking&quot; Lock held to ensure that change tracking data remains in existence until a reader is done with it";
enqueueDefs["enq: CT - state"]="Group: &quot;Block Change Tracking&quot; Lock held while enabling or disabling change tracking, to ensure that it is only enabled or disabled by one user at a time";
enqueueDefs["enq: CT - state change gate 1"]="Group: &quot;Block Change Tracking&quot; Lock held while enabling or disabling change tracking in RAC";
enqueueDefs["enq: CT - state change gate 2"]="Group: &quot;Block Change Tracking&quot; Lock held while enabling or disabling change tracking in RAC";
enqueueDefs["enq: CU - contention"]="Group: &quot;Cursor&quot; Recovers cursors in case of death while compiling";
enqueueDefs["enq: DB - contention"]="Group: &quot;DbsDriver&quot; Synchronizes modification of database wide supplementallogging attributes";
enqueueDefs["enq: DD - contention"]="Group: &quot;ASM Local Disk Group&quot; Synchronizes local accesses to ASM disk groups";
enqueueDefs["enq: DF - contention"]="Group: &quot;Datafile Online in RAC&quot; Enqueue held by foreground or DBWR when a datafile is brought online in RAC";
enqueueDefs["enq: DG - contention"]="Group: &quot;ASM Disk Group Modification&quot; Synchronizes accesses to ASM disk groups";
enqueueDefs["enq: DL - contention"]="Group: &quot;Direct Loader Index Creation&quot; Lock to prevent index DDL during direct load";
enqueueDefs["enq: DM - contention"]="Group: &quot;Database Mount/Open&quot; Enqueue held by foreground or DBWR to syncrhonize database mount/open with other operations";
enqueueDefs["enq: DN - contention"]="Group: &quot;Diskgroup number generator&quot; Serializes group number generations";
enqueueDefs["enq: DO - Staleness Registry create"]="Group: &quot;ASM Disk Online Lock&quot; Synchronizes Staleness Registry creation";
enqueueDefs["enq: DO - disk online"]="Group: &quot;ASM Disk Online Lock&quot; Synchronizes disk onlines and their recovery";
enqueueDefs["enq: DO - disk online operation"]="Group: &quot;ASM Disk Online Lock&quot; Represents an active disk online operation";
enqueueDefs["enq: DO - disk online recovery"]="Group: &quot;ASM Disk Online Lock&quot; Synchronizes disk onlines and their recovery";
enqueueDefs["enq: DO - startup of MARK process"]="Group: &quot;ASM Disk Online Lock&quot; Synchronizes startup of MARK process";
enqueueDefs["enq: DP - contention"]="Group: &quot;LDAP Parameter&quot; Synchronizes access to LDAP parameters";
enqueueDefs["enq: DR - contention"]="Group: &quot;Distributed Recovery&quot; Serializes the active distributed recovery operation";
enqueueDefs["enq: DS - contention"]="Group: &quot;Database Suspend&quot; Prevents a database suspend during LMON reconfiguration";
enqueueDefs["enq: DT - contention"]="Group: &quot;Default Temporary Tablespace&quot; Serializes changing the default temporary table spaceand user creation";
enqueueDefs["enq: DV - contention"]="Group: &quot;Diana Versioning&quot; Synchronizes access to lower-version Diana (PL/SQL intermediate representation)";
enqueueDefs["enq: DW - contention"]="Group: &quot;In memory Dispenser&quot; Serialize in memory dispenser operations";
enqueueDefs["enq: DX - contention"]="Group: &quot;Distributed Transaction&quot; Serializes tightly coupled distributed transaction branches";
enqueueDefs["enq: FA - access file"]="Group: &quot;ASM File Access Lock&quot; Synchronizes accesses to open ASM files";
enqueueDefs["enq: FB - contention"]="Group: &quot;Format Block&quot; Ensures that only one process can format data blcoks in auto segment space managed tablespaces";
enqueueDefs["enq: FC - open an ACD thread"]="Group: &quot;Disk Group Chunk Mount&quot; LGWR opens an ACD thread";
enqueueDefs["enq: FC - recover an ACD thread"]="Group: &quot;Disk Group Chunk Mount&quot; SMON recovers an ACD thread";
enqueueDefs["enq: FD - Flashback coordinator"]="Group: &quot;Flashback Database&quot; Synchronization";
enqueueDefs["enq: FD - Flashback logical operations"]="Group: &quot;Flashback Database&quot; Synchronization";
enqueueDefs["enq: FD - Flashback on/off"]="Group: &quot;Flashback Database&quot; Synchronization";
enqueueDefs["enq: FD - Marker generation"]="Group: &quot;Flashback Database&quot; Synchronization";
enqueueDefs["enq: FD - Restore point create/drop"]="Group: &quot;Flashback Database&quot; Synchronization";
enqueueDefs["enq: FD - Tablespace flashback on/off"]="Group: &quot;Flashback Database&quot; Synchronization";
enqueueDefs["enq: FE - contention"]="Group: &quot;KTFA Recovery&quot; Serializes flashback archive recovery ";
enqueueDefs["enq: FG - FG redo generation enq race"]="Group: &quot;ACD Relocation Gate Enqueue&quot; resolve race condition to acquire Disk Group Redo Generation Enqueue";
enqueueDefs["enq: FG - LGWR redo generation enq race"]="Group: &quot;ACD Relocation Gate Enqueue&quot; resolve race condition to acquire Disk Group Redo Generation Enqueue";
enqueueDefs["enq: FG - serialize ACD relocate"]="Group: &quot;ACD Relocation Gate Enqueue&quot; only 1 process in the cluster may do ACD relocation in a disk group";
enqueueDefs["enq: FL - Flashback database log"]="Group: &quot;Flashback database log&quot; Synchronization";
enqueueDefs["enq: FL - Flashback db command"]="Group: &quot;Flashback database log&quot; Enqueue used to synchronize Flashback Database and and deletion of flashback logs.";
enqueueDefs["enq: FM - contention"]="Group: &quot;File Mapping&quot; Synchronizes access to global file mapping state";
enqueueDefs["enq: FP - global fob contention"]="Group: &quot;File Object&quot; Synchronizes various File Object(FOB) operations";
enqueueDefs["enq: FR - contention"]="Group: &quot;Disk Group Recovery&quot; begin recovery of disk group";
enqueueDefs["enq: FR - recover the thread"]="Group: &quot;Disk Group Recovery&quot; wait for lock domain detach";
enqueueDefs["enq: FR - use the thread"]="Group: &quot;Disk Group Recovery&quot; indicate this ACD thread is alive";
enqueueDefs["enq: FS - contention"]="Group: &quot;File Set / Dictionary Check&quot; Enqueue used to synchronize recovery and file operations or synchronize dictionary check";
enqueueDefs["enq: FT - allow LGWR writes"]="Group: &quot;Disk Group Redo Generation&quot; allow LGWR to generate redo in this thread";
enqueueDefs["enq: FT - disable LGWR writes"]="Group: &quot;Disk Group Redo Generation&quot; prevent LGWR from generating redo in this thread";
enqueueDefs["enq: FU - contention"]="Group: &quot;DBFUS&quot; This enqueue is used to serialize the capture of the DB Feature           Usage and High Water Mark Statistics";
enqueueDefs["enq: FX - issue ACD Xtnt Relocation CIC"]="Group: &quot;ACD Xtnt Info CIC&quot; ARB relocates ACD extent";
enqueueDefs["enq: HD - contention"]="Group: &quot;ASM Disk Header&quot; Serializes accesses to ASM SGA data structures";
enqueueDefs["enq: HP - contention"]="Group: &quot;Queue Page&quot; Synchronizes accesses to queue pages";
enqueueDefs["enq: HQ - contention"]="Group: &quot;Hash Queue&quot; Synchronizes the creation of new queue IDs";
enqueueDefs["enq: HV - contention"]="Group: &quot;Direct Loader High Water Mark&quot; Lock used to broker the high water mark during parallel inserts";
enqueueDefs["enq: HW - contention"]="Group: &quot;Segment High Water Mark&quot; Lock used to broker the high water mark during parallel inserts";
enqueueDefs["enq: IA - contention"]="Group: &quot;Internal&quot; ";
enqueueDefs["enq: ID - contention"]="Group: &quot;NID&quot; Lock held to prevent other processes from performing controlfile transaction while NID is running";
enqueueDefs["enq: IL - contention"]="Group: &quot;Label Security&quot; Synchronizes accesses to internal label data structures";
enqueueDefs["enq: IM - contention for blr"]="Group: &quot;Kti blr lock&quot; Serializes block recovery for IMU txn";
enqueueDefs["enq: IR - contention"]="Group: &quot;Instance Recovery&quot; Synchronizes instance recovery";
enqueueDefs["enq: IR - contention2"]="Group: &quot;Instance Recovery&quot; Synchronizes parallel instance recovery and shutdown immediate";
enqueueDefs["enq: IS - contention"]="Group: &quot;Instance State&quot; Enqueue used to synchronize instance state changes";
enqueueDefs["enq: IT - contention"]="Group: &quot;In-Mem Temp Table Meta Creation&quot; Synchronizes accesses to a temp object's metadata";
enqueueDefs["enq: JD - contention"]="Group: &quot;Job Queue Date&quot; Synchronizes dates between job queue coordinator and slave processes";
enqueueDefs["enq: JI - contention"]="Group: &quot;Materialized View&quot; Lock held during materialized view operations (like refresh, alter) to prevent concurrent operations on the same materialized view";
enqueueDefs["enq: JQ - contention"]="Group: &quot;Job Queue&quot; Lock to prevent multiple instances from running a single job";
enqueueDefs["enq: JS - aq sync"]="Group: &quot;Job Scheduler&quot; Scheduler evt code and AQ sync";
enqueueDefs["enq: JS - contention"]="Group: &quot;Job Scheduler&quot; Synchronizes accesses to the job cache";
enqueueDefs["enq: JS - evt notify"]="Group: &quot;Job Scheduler&quot; Lock got during event notification";
enqueueDefs["enq: JS - evtsub add"]="Group: &quot;Job Scheduler&quot; Lock got when adding subscriber to event q";
enqueueDefs["enq: JS - evtsub drop"]="Group: &quot;Job Scheduler&quot; Lock got when dropping subscriber to event q";
enqueueDefs["enq: JS - job recov lock"]="Group: &quot;Job Scheduler&quot; Lock to recover jobs running on crashed RAC inst";
enqueueDefs["enq: JS - job run lock - synchronize"]="Group: &quot;Job Scheduler&quot; Lock to prevent job from running elsewhere";
enqueueDefs["enq: JS - q mem clnup lck"]="Group: &quot;Job Scheduler&quot; Lock obtained when cleaning up q memory";
enqueueDefs["enq: JS - queue lock"]="Group: &quot;Job Scheduler&quot; Lock on internal scheduler queue";
enqueueDefs["enq: JS - sch locl enqs"]="Group: &quot;Job Scheduler&quot; Scheduler non-global enqueues";
enqueueDefs["enq: JS - wdw op"]="Group: &quot;Job Scheduler&quot; Lock got when doing window open/close";
enqueueDefs["enq: JX - SQL statement queue"]="Group: &quot;SQL STATEMENT QUEUE&quot;  statement";
enqueueDefs["enq: JX - cleanup of  queue"]="Group: &quot;SQL STATEMENT QUEUE&quot; release SQL statement resources";
enqueueDefs["enq: KD - determine DBRM master"]="Group: &quot;Scheduler Master DBRM&quot; Determine DBRM master";
enqueueDefs["enq: KM - contention"]="Group: &quot;Scheduler&quot; Synchronizes various Resource Manager operations";
enqueueDefs["enq: KO - fast object checkpoint"]="Group: &quot;Multiple Object Checkpoint&quot; Coordinates fast object checkpoint";
enqueueDefs["enq: KP - contention"]="Group: &quot;Kupp Process Startup&quot; Synchronizes kupp process startup";
enqueueDefs["enq: KQ - access ASM attribute"]="Group: &quot;ASM Attributes Enque&quot; Synchronization of ASM cached attributes";
enqueueDefs["enq: KT - contention"]="Group: &quot;Scheduler Plan&quot; Synchronizes accesses to the current Resource Manager plan";
enqueueDefs["enq: MD - contention"]="Group: &quot;Materialized View Log DDL&quot; Lock held during materialized view log DDL statements";
enqueueDefs["enq: MH - contention"]="Group: &quot;AQ Notification Mail Host&quot; Lock used for recovery when setting Mail Host for AQ e-mail notifications";
enqueueDefs["enq: MK - contention"]="Group: &quot;Master Key&quot; changing values in enc$";
enqueueDefs["enq: ML - contention"]="Group: &quot;AQ Notification Mail Port&quot; Lock used for recovery when setting Mail Port for AQ e-mail notifications";
enqueueDefs["enq: MN - contention"]="Group: &quot;LogMiner&quot; Synchronizes updates to the LogMiner dictionary and prevents multiple instances from preparing the same LogMiner session";
enqueueDefs["enq: MO - contention"]="Group: &quot;MMON restricted session&quot; Serialize MMON operations for restricted sessions";
enqueueDefs["enq: MR - contention"]="Group: &quot;Media Recovery&quot; Lock used to coordinate media recovery with other uses of datafiles";
enqueueDefs["enq: MR - standby role transition"]="Group: &quot;Media Recovery&quot; Lock used to disallow concurrent standby role transition attempt";
enqueueDefs["enq: MS - contention"]="Group: &quot;Materialized View Refresh Log&quot; Lock held during materialized view refresh to setup MV log";
enqueueDefs["enq: MV - datafile move"]="Group: &quot;Online Datafile Move&quot; Held during online datafile move operation or cleanup";
enqueueDefs["enq: MW - contention"]="Group: &quot;MWIN Schedule&quot; This enqueue is used to serialize the calibration of the           manageability schedules with the Maintenance Window";
enqueueDefs["enq: MX - sync storage server info"]="Group: &quot;ksz synch&quot; Lock held to generate a response to the storage server information request when an instance is starting up";
enqueueDefs["enq: OC - contention"]="Group: &quot;Outline Cache&quot; Synchronizes write accesses to the outline cache";
enqueueDefs["enq: OD - Serializing DDLs"]="Group: &quot;Online DDLs&quot; Lock to prevent concurrent online DDLs";
enqueueDefs["enq: OL - contention"]="Group: &quot;Outline Name&quot; Synchronizes accesses to a particular outline name";
enqueueDefs["enq: OQ - xsoq*histrecb"]="Group: &quot;OLAPI Histories&quot; Synchronizes access to olapi history parameter CB";
enqueueDefs["enq: OQ - xsoqhiAlloc"]="Group: &quot;OLAPI Histories&quot; Synchronizes access to olapi history allocation";
enqueueDefs["enq: OQ - xsoqhiClose"]="Group: &quot;OLAPI Histories&quot; Synchronizes access to olapi history closing";
enqueueDefs["enq: OQ - xsoqhiFlush"]="Group: &quot;OLAPI Histories&quot; Synchronizes access to olapi history flushing";
enqueueDefs["enq: OQ - xsoqhistrecb"]="Group: &quot;OLAPI Histories&quot; Synchronizes access to olapi history globals";
enqueueDefs["enq: OW - initialization"]="Group: &quot;Encryption Wallet&quot; initializing the wallet context";
enqueueDefs["enq: OW - termination"]="Group: &quot;Encryption Wallet&quot; terminate the wallet context";
enqueueDefs["enq: PD - contention"]="Group: &quot;Property Lock&quot; Prevents others from updating the same property";
enqueueDefs["enq: PE - contention"]="Group: &quot;Parameter&quot; Synchronizes system parameter updates";
enqueueDefs["enq: PF - contention"]="Group: &quot;Password File&quot; Synchronizes accesses to the password file";
enqueueDefs["enq: PG - contention"]="Group: &quot;Global Parameter&quot; Synchronizes global system parameter updates";
enqueueDefs["enq: PH - contention"]="Group: &quot;AQ Notification Proxy&quot; Lock used for recovery when setting Proxy for AQ HTTP notifications";
enqueueDefs["enq: PI - contention"]="Group: &quot;Remote PX Process Spawn Status&quot; Communicates remote Parallel Execution Server Process creation status";
enqueueDefs["enq: PL - contention"]="Group: &quot;Transportable Tablespace&quot; Coordinates plug-in operation of transportable tablespaces";
enqueueDefs["enq: PR - contention"]="Group: &quot;Process Startup&quot; Synchronizes process startup";
enqueueDefs["enq: PS - contention"]="Group: &quot;PX Process Reservation&quot; Parallel Execution Server Process reservation and synchronization";
enqueueDefs["enq: PT - contention"]="Group: &quot;ASM Partnership and Status Table&quot; Synchronizes access to ASM PST metadata";
enqueueDefs["enq: PV - syncshut"]="Group: &quot;KSV slave startup&quot; Synchronizes instance shutdown_slvstart";
enqueueDefs["enq: PV - syncstart"]="Group: &quot;KSV slave startup&quot; Synchronizes slave start_shutdown";
enqueueDefs["enq: PW - flush prewarm buffers"]="Group: &quot;Buffer Cache PreWarm&quot; Direct Load needs to flush prewarmed buffers if DBWR 0 holds enqueue";
enqueueDefs["enq: PW - perwarm status in dbw0"]="Group: &quot;Buffer Cache PreWarm&quot; DBWR 0 holds enqueue indicating prewarmed buffers present in cache";
enqueueDefs["enq: RB - contention"]="Group: &quot;ASM Rollback Recovery&quot; Serializes ASM rollback recovery operations";
enqueueDefs["enq: RC - Result Cache: Contention"]="Group: &quot;Result Cache: Enqueue&quot; Coordinates access to a result-set";
enqueueDefs["enq: RD - RAC load"]="Group: &quot;RAC Load&quot;  update RAC load info";
enqueueDefs["enq: RE - block repair contention"]="Group: &quot;Block Repair/Resilvering&quot; Synchronize block repair/resilvering operations";
enqueueDefs["enq: RF - DG Broker Current File ID"]="Group: &quot;Data Guard Broker&quot; Identifies which configuration metadata file is current";
enqueueDefs["enq: RF - FSFO Observer Heartbeat"]="Group: &quot;Data Guard Broker&quot; Captures recent Fast-Start Failover Observer heartbeat information";
enqueueDefs["enq: RF - RF - Database Automatic Disable"]="Group: &quot;Data Guard Broker&quot; Means for detecting when database is being automatically disabled";
enqueueDefs["enq: RF - atomicity"]="Group: &quot;Data Guard Broker&quot; Ensures atomicity of log transport setup";
enqueueDefs["enq: RF - new AI"]="Group: &quot;Data Guard Broker&quot; Synchronizes selection of the new apply instance";
enqueueDefs["enq: RF - synch: DG Broker metadata"]="Group: &quot;Data Guard Broker&quot; Ensures r/w atomicity of DG configuration metadata";
enqueueDefs["enq: RF - synchronization: aifo master"]="Group: &quot;Data Guard Broker&quot; Synchronizes apply instance failure detection and failover operation";
enqueueDefs["enq: RF - synchronization: critical ai"]="Group: &quot;Data Guard Broker&quot; Synchronizes critical apply instance among primary instances";
enqueueDefs["enq: RK - set key"]="Group: &quot;wallet_set_mkey&quot; wallet master key rekey";
enqueueDefs["enq: RL - RAC wallet lock"]="Group: &quot;RAC Encryption Wallet Lock&quot; RAC wallet lock";
enqueueDefs["enq: RN - contention"]="Group: &quot;Redo Log Nab Computation&quot; Coordinates nab computations of online logs during recovery";
enqueueDefs["enq: RO - contention"]="Group: &quot;Multiple Object Reuse&quot; Coordinates flushing of multiple objects";
enqueueDefs["enq: RO - fast object reuse"]="Group: &quot;Multiple Object Reuse&quot; Coordinates fast object reuse";
enqueueDefs["enq: RP - contention"]="Group: &quot;Resilver / Repair&quot; Enqueue held when resilvering is needed or when datablock is repaired from mirror";
enqueueDefs["enq: RR - contention"]="Group: &quot;Workload Capture and Replay&quot; Concurrent invocation of DBMS_WORKLOAD_* package API";
enqueueDefs["enq: RS - file delete"]="Group: &quot;Reclaimable Space&quot; Lock held to prevent file from accessing during space reclaimation";
enqueueDefs["enq: RS - persist alert level"]="Group: &quot;Reclaimable Space&quot; Lock held to make alert level persistent";
enqueueDefs["enq: RS - prevent aging list update"]="Group: &quot;Reclaimable Space&quot; Lock held to prevent aging list update";
enqueueDefs["enq: RS - prevent file delete"]="Group: &quot;Reclaimable Space&quot; Lock held to prevent deleting file to reclaim space";
enqueueDefs["enq: RS - read alert level"]="Group: &quot;Reclaimable Space&quot; Lock held to read alert level";
enqueueDefs["enq: RS - record reuse"]="Group: &quot;Reclaimable Space&quot; Lock held to prevent file from accessing while reusing circular record";
enqueueDefs["enq: RS - write alert level"]="Group: &quot;Reclaimable Space&quot; Lock held to write alert level";
enqueueDefs["enq: RT - contention"]="Group: &quot;Redo Thread&quot; Thread locks held by LGWR, DBW0, and RVWR to indicate mounted or open status";
enqueueDefs["enq: RT - thread internal enable/disable"]="Group: &quot;Redo Thread&quot; Thread locks held by CKPT to synchronize thread enable and disable";
enqueueDefs["enq: RU - contention"]="Group: &quot;Rolling Migration&quot; Serializes rolling migration operations";
enqueueDefs["enq: RU - waiting"]="Group: &quot;Rolling Migration&quot; Results of rolling migration CIC";
enqueueDefs["enq: RW - MV metadata contention"]="Group: &quot;Materialized View Flags&quot; Lock held by CREATE/ALTER/DROP materialized viewwhile updating materialized view flags in detail tables";
enqueueDefs["enq: RX - relocate extent"]="Group: &quot;ASM Extent Relocation Lock&quot; Synchronizes relocating ASM extents";
enqueueDefs["enq: SB - contention"]="Group: &quot;LogicalStandby&quot; Synchronizes Logical Standby metadata operations";
enqueueDefs["enq: SE - contention"]="Group: &quot;Session Migration&quot; Synchronizes transparent session migration operations";
enqueueDefs["enq: SF - contention"]="Group: &quot;AQ Notification Sender&quot; Lock used for recovery when setting Sender for AQ e-mail notifications";
enqueueDefs["enq: SH - contention"]="Group: &quot;Active Session History Flushing&quot; Should seldom see this contention as this Enqueue is always  acquired in no-wait mode";
enqueueDefs["enq: SI - contention"]="Group: &quot;Streams Table Instantiation&quot; Prevents multiple streams tabel instantiations";
enqueueDefs["enq: SJ - Slave Task Cancel"]="Group: &quot;KTSJ Slave Task Cancel&quot; Serializes cancelling task executed by slave process";
enqueueDefs["enq: SK - contention"]="Group: &quot;Shrink Segment&quot; Serialize shrink of a segment";
enqueueDefs["enq: SL - escalate lock"]="Group: &quot;Serialize Lock request&quot; sending lock escalate to LCK0";
enqueueDefs["enq: SL - get lock"]="Group: &quot;Serialize Lock request&quot; sending lock req to LCK0";
enqueueDefs["enq: SL - get lock for undo"]="Group: &quot;Serialize Lock request&quot; sending lock req for undo to LCK0";
enqueueDefs["enq: SO - contention"]="Group: &quot;Shared Object&quot; Synchronizes access to Shared Object (PL/SQL Shared Object Manager)";
enqueueDefs["enq: SP - contention"]="Group: &quot;Spare Enqueue&quot; (1) due to one-off patch";
enqueueDefs["enq: SP - contention 2"]="Group: &quot;Spare Enqueue&quot; (2) due to one-off patch";
enqueueDefs["enq: SP - contention 3"]="Group: &quot;Spare Enqueue&quot; (3) due to one-off patch";
enqueueDefs["enq: SP - contention 4"]="Group: &quot;Spare Enqueue&quot; (4) due to one-off patch";
enqueueDefs["enq: SQ - contention"]="Group: &quot;Sequence Cache&quot; Lock to ensure that only one process can replenish the sequence cache";
enqueueDefs["enq: SR - contention"]="Group: &quot;Synchronized Replication&quot; Coordinates replication / streams operations";
enqueueDefs["enq: SS - contention"]="Group: &quot;Sort Segment&quot; Ensures that sort segments created during parallel DML operations aren't prematurely cleaned up";
enqueueDefs["enq: ST - contention"]="Group: &quot;Space Transaction&quot; Synchronizes space management activities in dictionary-managed tablespaces";
enqueueDefs["enq: SU - contention"]="Group: &quot;SaveUndo Segment&quot; Serializes access to SaveUndo Segment";
enqueueDefs["enq: SW - contention"]="Group: &quot;Suspend Writes&quot; Coordinates the 'alter system suspend' operation";
enqueueDefs["enq: TA - contention"]="Group: &quot;Instance Undo&quot; Serializes operations on undo segments and undo tablespaces";
enqueueDefs["enq: TB - SQL Tuning Base Cache Load"]="Group: &quot;SQL Tuning Base Existence Cache&quot; Synchronizes writes to the SQL Tuning Base Existence Cache";
enqueueDefs["enq: TB - SQL Tuning Base Cache Update"]="Group: &quot;SQL Tuning Base Existence Cache&quot; Synchronizes writes to the SQL Tuning Base Existence Cache";
enqueueDefs["enq: TC - contention"]="Group: &quot;Tablespace Checkpoint&quot; Lock held to guarantee uniqueness of a tablespace checkpoint";
enqueueDefs["enq: TC - contention2"]="Group: &quot;Tablespace Checkpoint&quot; Lock of setup of a unqiue tablespace checkpoint in null mode";
enqueueDefs["enq: TD - KTF dump entries"]="Group: &quot;KTF map table enqueue&quot; KTF dumping time/scn mappings in SMON_SCN_TIME table";
enqueueDefs["enq: TE - KTF broadcast"]="Group: &quot;KTF broadcast&quot; KTF broadcasting";
enqueueDefs["enq: TF - contention"]="Group: &quot;Temporary File&quot; Serializes dropping of a temporary file";
enqueueDefs["enq: TH - metric threshold evaluation"]="Group: &quot;Threshold Chain&quot; Serializes threshold in-memory chain access";
enqueueDefs["enq: TK - Auto Task Serialization"]="Group: &quot;Auto Task Serialization&quot; Lock held by MMON to prevent other MMON spawning of Autotask Slave";
enqueueDefs["enq: TK - Auto Task Slave Lockout"]="Group: &quot;Auto Task Serialization&quot; Serializes spawned Autotask Slaves";
enqueueDefs["enq: TL - contention"]="Group: &quot;Log Lock&quot; Serializes threshold log table read and update";
enqueueDefs["enq: TM - contention"]="Group: &quot;DML&quot; Synchronizes accesses to an object";
enqueueDefs["enq: TO - contention"]="Group: &quot;Temp Object&quot; Synchronizes DDL and DML operations on a temp object";
enqueueDefs["enq: TP - contention"]="Group: &quot;Runtime Fixed Table Purge&quot; Lock held during purge and dynamic reconfiguration of fixed tables.";
enqueueDefs["enq: TQ - DDL contention"]="Group: &quot;Queue table enqueue&quot; TM access to the queue table";
enqueueDefs["enq: TQ - DDL-INI contention"]="Group: &quot;Queue table enqueue&quot; Streams DDL on queue table";
enqueueDefs["enq: TQ - INI contention"]="Group: &quot;Queue table enqueue&quot; TM access to the queue table";
enqueueDefs["enq: TQ - TM contention"]="Group: &quot;Queue table enqueue&quot; TM access to the queue table";
enqueueDefs["enq: TS - contention"]="Group: &quot;Temporary Segment&quot; Serializes accesses to temp segments";
enqueueDefs["enq: TT - contention"]="Group: &quot;Tablespace&quot; Serializes DDL operations on tablespaces";
enqueueDefs["enq: TW - contention"]="Group: &quot;Cross-Instance Transaction&quot; Lock held by one instance to wait for transactions on all instances to finish";
enqueueDefs["enq: TX - allocate ITL entry"]="Group: &quot;Transaction&quot; Allocating an ITL entry in order to begin a transaction";
enqueueDefs["enq: TX - contention"]="Group: &quot;Transaction&quot; Lock held by a transaction to allow other transactions to wait for it";
enqueueDefs["enq: TX - index contention"]="Group: &quot;Transaction&quot; Lock held on an index during a split to prevent other operations on it";
enqueueDefs["enq: TX - row lock contention"]="Group: &quot;Transaction&quot; Lock held on a particular row by a transaction to prevent other transactions from modifying it";
enqueueDefs["enq: UL - contention"]="Group: &quot;User-defined&quot; Lock used by user applications";
enqueueDefs["enq: US - contention"]="Group: &quot;Undo Segment&quot; Lock held to perform DDL on the undo segment";
enqueueDefs["enq: WA - contention"]="Group: &quot;AQ Notification Watermark&quot; Lock used for recovery when setting Watermark for memory usage in AQ notifications";
enqueueDefs["enq: WF - contention"]="Group: &quot;AWR Flush&quot; This enqueue is used to serialize the flushing of snapshots";
enqueueDefs["enq: WG - delete fso"]="Group: &quot;Write gather local enqueue&quot; acquire lobid local enqueue when deleting fso";
enqueueDefs["enq: WG - lock fso"]="Group: &quot;Write gather local enqueue&quot; acquire lobid local enqueue when locking fso";
enqueueDefs["enq: WL - RAC-wide SGA contention"]="Group: &quot;Being Written Redo Log&quot; Serialize access to RAC-wide SGA";
enqueueDefs["enq: WL - RFS global state contention"]="Group: &quot;Being Written Redo Log&quot; Serialize access to RFS global state";
enqueueDefs["enq: WL - Test access/locking"]="Group: &quot;Being Written Redo Log&quot; Testing redo transport access/locking";
enqueueDefs["enq: WL - contention"]="Group: &quot;Being Written Redo Log&quot; Coordinates access to redo log files and archive logs";
enqueueDefs["enq: WM - WLM Plan activation"]="Group: &quot;WLM Plan Operations&quot; Synchronizes new WLM Plan activation";
enqueueDefs["enq: WP - contention"]="Group: &quot;AWR Purge&quot; This enqueue handles concurrency between purging and baselines";
enqueueDefs["enq: WR - contention"]="Group: &quot;LNS archiving log&quot; Coordinates access to logs by Async LNS and ARCH/FG";
enqueueDefs["enq: XC - XDB Configuration"]="Group: &quot;XDB Configuration&quot; Lock obtained when incrementing XDB configuration version number";
enqueueDefs["enq: XD - ASM disk drop/add"]="Group: &quot;Auto Online Exadata disks&quot; Serialize Auto Drop/Add Exadata disk operations";
enqueueDefs["enq: XH - contention"]="Group: &quot;AQ Notification No-Proxy&quot; Lock used for recovery when setting No Proxy Domains for AQ HTTP notifications";
enqueueDefs["enq: XL - fault extent map"]="Group: &quot;ASM Extent Fault Lock&quot; Keep multiple processes from faulting in the same extent chunk";
enqueueDefs["enq: XQ - purification"]="Group: &quot;ASM Extent Relocation Enqueue&quot; wait for relocation before doing block purification";
enqueueDefs["enq: XQ - recovery"]="Group: &quot;ASM Extent Relocation Enqueue&quot; prevent relocation during _recovery_asserts checking";
enqueueDefs["enq: XQ - relocation"]="Group: &quot;ASM Extent Relocation Enqueue&quot; wait for recovery before doing relocation";
enqueueDefs["enq: XR - database force logging"]="Group: &quot;Quiesce / Force Logging&quot; Lock held during database force logging mode";
enqueueDefs["enq: XR - quiesce database"]="Group: &quot;Quiesce / Force Logging&quot; Lock held during database quiesce";
enqueueDefs["enq: XY - contention"]="Group: &quot;Internal Test&quot; Lock used for internal testing";
enqueueDefs["enq: ZA - add std audit table partition"]="Group: &quot;Audit Partition&quot; lock held to add partition to std audit table";
enqueueDefs["enq: ZF - add fga audit table partition"]="Group: &quot;FGA Partition&quot; lock held to add partition to fga audit table";
enqueueDefs["enq: ZG - contention"]="Group: &quot;File Group&quot; Coordinates file group operations";
enqueueDefs["enq: ZH - compression analysis"]="Group: &quot;Compression Analyzer&quot; Synchronizes analysis and insert into compression$, prevents multiple threads analyzing the same table during a load";
enqueueDefs["enq: ZZ - update hash tables"]="Group: &quot;Global Context Action&quot; lock held for updating global context hash tables";
